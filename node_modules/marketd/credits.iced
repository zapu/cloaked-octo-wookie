db = require './couch'

module.exports.getFinishedProjectCount = (autocb) ->
	await db.view 'market/get_finished_projects_count',
		{ 
			group: true
			reduce: true
		},
		defer err, dbres

	if dbres.length == 0
		return 0

	return dbres[0].value

scaleHistoricalCredits = (project_id, sum) ->
	await db.view 'market/projects_by_ids', key: project_id, defer err, dbres
	throw err if err

	project_doc = dbres[0]?.value
	unless project_doc?
		# No such project?
		return 0 

	unless project_doc.finished_id?
		# Project not finished?
		return 0

	await module.exports.getFinishedProjectCount defer last_id

	return Math.pow(0.5, last_id - project_doc.finished_id) * sum


getCreditsForProjects = (node) ->
	await db.view 'market/get_work_credits',
		{ 
			startkey: [node]
			endkey: [node, {}]
			group: true
			reduce: true
		},
		defer err, work_credit_sums

	throw err if err

	total_scaled_credits = 0

	await
		for credit_sum in work_credit_sums
			((cs) ->
				await scaleHistoricalCredits cs.key[1], cs.value defer partial_sum
				total_scaled_credits += partial_sum
			)(credit_sum)

	return total_scaled_credits


module.exports.getHistoricalExperience = (node) ->

